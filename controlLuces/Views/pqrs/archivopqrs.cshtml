@model List<controlLuces.Models.PqrsModel>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="https://fonts.googleapis.com/css2?family=Product+Sans&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        html, body {
            height: 100%;
            margin: 0;
        }

        body {
            background: linear-gradient(to bottom, #87CEEB, #007bff) no-repeat;
            background-size: cover;
            font-family: 'Product Sans', sans-serif;
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .container-body-content {
            background-color: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 900px;
            max-height: 80vh;
            overflow-y: auto;
            margin: auto;
            transition: background-color 0.3s ease;
        }

        .card-body {
            text-align: center;
        }

        .forms {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
            margin-bottom: 20px;
            transition: box-shadow 0.3s ease;
        }

            .forms:hover {
                box-shadow: 0 0 20px rgba(0, 123, 255, 0.8);
            }

        .btn {
            font-family: 'Product Sans', sans-serif;
            display: inline-block;
            padding: 7px 13px;
            margin: 5px; /* Añadido para espaciado entre botones */
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
                color: #fff; /* Mantiene el texto blanco */
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Efecto de resplandor */
            }

        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
            color: #fff;
        }

            .btn-danger:hover {
                background-color: #c82333;
                border-color: #bd2130;
                color: #fff; /* Mantiene el texto blanco */
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Efecto de resplandor */
            }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            color: #fff;
        }

            .btn-success:hover {
                background-color: #218838;
                border-color: #218838;
                color: #fff; /* Mantiene el texto blanco */
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Efecto de resplandor */
            }

        .btn-excel {
            background-color: #217346;
            border-color: #217346;
            color: #fff;
            margin-top: 10px;
        }

            .btn-excel:hover {
                background-color: #1a5a34;
                border-color: #1a5a34;
                color: #fff; /* Mantiene el texto blanco */
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Efecto de resplandor */
            }

        .btn-back {
            background-color: #dc3545;
            border-color: #dc3545;
            color: #fff;
            margin-top: 10px;
        }

            .btn-back:hover {
                background-color: #c82333;
                border-color: #bd2130;
                color: #fff; /* Mantiene el texto blanco */
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Efecto de resplandor */
            }

        .table {
            margin-top: 20px;
            box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.8);
            transition: box-shadow 0.3s ease;
        }

            .table:hover {
                box-shadow: 0 0 20px rgba(0, 123, 255, 0.8);
            }

        .tuclase {
            background-color: #17a2b8;
            color: #fff;
            border-radius: 10px;
            padding: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .table-responsive {
            overflow-x: auto;
        }

        .button-container {
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container-body-content">
        <h1 class="text-center mb-4 tuclase"><i class="fas fa-history mr-2"></i>Archivo PQRS</h1>
        <div class="card-body">
            <form method="post" action="@Url.Action("BuscarPqrs", "pqrs")" class="forms">
                <div class="input-group mb-3">
                    <select id="tipoBusqueda" name="tipoBusqueda" class="form-control">
                        <option value="">Seleccionar</option>
                        <option value="consecutivo">Por Consecutivo</option>
                        <option value="fecha">Por Fecha</option>
                    </select>
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-primary"><i class="fas fa-search mr-2"></i>Buscar</button>
                    </div>
                </div>
                <div id="rangoFecha" style="display: none;">
                    <div class="input-group mb-3">
                        <input type="date" id="desde" name="desde" class="form-control">
                        <div class="input-group-append">
                            <span class="input-group-text">Desde</span>
                        </div>
                    </div>
                    <div class="input-group mb-3">
                        <input type="date" id="hasta" name="hasta" class="form-control">
                        <div class="input-group-append">
                            <span class="input-group-text">Hasta</span>
                        </div>
                    </div>
                </div>
                <div id="campoConsecutivo" style="display: none;">
                    <div class="input-group mb-3">
                        <input type="text" id="Idpqrs" name="Idpqrs" class="form-control">
                        <div class="input-group-append">
                            <span class="input-group-text">Número de Consecutivo</span>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Consecutivo</th>
                        <th>Fecha</th>
                        <th>Tipo</th>
                        <th>Canal</th>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>Tipo Doc</th>
                        <th>Documento</th>
                        <th>Teléfono</th>
                        <th>Correo</th>
                        <th>Referencia</th>
                        <th>Dirección</th>
                       
                        <th>Tipo Alumbrado</th>
                        <th>Descripción</th>
                        <th>Estado</th>
                     
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var pqrs in Model)
                        {
                            <tr>
                                <td>@pqrs.Consecutivo</td>
                                <td>@pqrs.FechaRegistro</td>
                                <td>@pqrs.Tipopqrs</td>
                                <td>@pqrs.Canal</td>
                                <td>@pqrs.Nombre</td>
                                <td>@pqrs.Apellido</td>
                                <td>@pqrs.TipoDoc</td>
                                <td>@pqrs.Documento</td>
                                <td>@pqrs.Telefono</td>
                                <td>@pqrs.Correo</td>
                                <td>@pqrs.Referencia</td>

                                
                                <td>@pqrs.TipoAlumbrado</td>
                                <td>@pqrs.DescripcionAfectacion</td>
                                <td>@pqrs.EstadoNombre</td>
                                <td>
                                    <!-- Agregar botones o enlaces para acciones -->
                                    <a href="@Url.Action("verInfo", "Pqrs", new { id = pqrs.Idpqrs })" class="btn btn-info"><i class="fas fa-info-circle"></i> Ver Info</a>

                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="16" class="text-center">No hay datos disponibles.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="button-container">
            <button class="btn btn-excel"><i class="fas fa-file-excel mr-2"></i> Exportar a Excel</button>
            <a href="@Url.Action("Index", "Home")" class="btn btn-back"><i class="fas fa-arrow-left mr-2"></i> Atrás</a>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Maneja el cambio en el tipo de búsqueda
            var tipoBusqueda = document.getElementById('tipoBusqueda');
            var rangoFecha = document.getElementById('rangoFecha');
            var campoConsecutivo = document.getElementById('campoConsecutivo');

            tipoBusqueda.addEventListener('change', function () {
                if (this.value === 'fecha') {
                    rangoFecha.style.display = 'block';
                    campoConsecutivo.style.display = 'none';
                } else if (this.value === 'consecutivo') {
                    rangoFecha.style.display = 'none';
                    campoConsecutivo.style.display = 'block';
                } else {
                    rangoFecha.style.display = 'none';
                    campoConsecutivo.style.display = 'none';
                }
            });

            // Maneja la exportación a Excel
            document.querySelector('.btn-excel').addEventListener('click', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del enlace

                var wb = XLSX.utils.book_new(); // Crea un nuevo libro de Excel
                var ws = XLSX.utils.table_to_sheet(document.querySelector('.table')); // Convierte la tabla en una hoja

                // Agrega la hoja al libro
                XLSX.utils.book_append_sheet(wb, ws, 'PQRS');

                // Escribe el archivo Excel y descarga
                XLSX.writeFile(wb, 'PQRS.xlsx');
            });
        });
    </script>
</body>
</html>
